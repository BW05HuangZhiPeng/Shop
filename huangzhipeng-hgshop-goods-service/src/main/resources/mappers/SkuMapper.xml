<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huangzhipeng.shop.dao.SkuMapper">

	<resultMap type="sku" id="skuMap">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="sell_point" property="sellPoint" />
		<result column="price" property="price" />
		<result column="stock_count" property="stockCount" />
		<result column="barcode" property="barcode" />
		<result column="image" property="image" />
		<result column="status" property="status" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="cost_price" property="costPrice" />
		<result column="market_price" property="marketPrice" />
		<result column="spu_id" property="spuId" />
		<result column="cart_thumbnail" property="cartThumbnail" />
		<collection property="skuSpec" javaType="list" ofType="skuSpec">
			<id column="ks_id" property="id"/>
			<result column="spec_id" property="specId"/>
			<result column="spec_option_id" property="specOptionId"/>
		</collection>
	</resultMap>

	<insert id="insertSku" useGeneratedKeys="true" keyProperty="id">
		insert into hg_sku(title,sell_point,price,stock_count,barcode,image,status,create_time,update_time,cost_price,market_price,spu_id) 
		values (#{title},#{sellPoint},#{price},#{stockCount},#{barcode},#{image},#{status},#{createTime},#{updateTime},#{costPrice},#{marketPrice},#{spuId})
	</insert>
	
	<insert id="insertSkuSpec">
		insert into hg_sku_spec(sku_id,spec_id,spec_option_id) values (#{skuId},#{specId},#{specOptionId})
	</insert>
	
	<update id="updateSku">
		update hg_sku set 
		<if test="title!=null and title!=''">
			title=#{title},
		</if>
		<if test="sellPoint!=null and sellPoint!=''">
			sell_point=#{sellPoint},
		</if>
		<if test="price!=null">
			price=#{price},
		</if>
		<if test="stockCount!=null">
			stock_count=#{stockCount},
		</if>
		<if test="barcode!=null and barcode!=''">
			barcode=#{barcode},
		</if>
		<if test="image!=null and image!=''">
			image=#{image},
		</if>
		<if test="status!=null and status!=''">
			status=#{status},
		</if>
		<if test="updateTime!=null">
			update_time=#{updateTime},
		</if>
		<if test="costPrice!=null">
			cost_price=#{costPrice},
		</if>
		<if test="marketPrice!=null">
			market_price=#{marketPrice},
		</if>
		<if test="cartThumbnail!=null and cartThumbnail!=''">
			cart_thumbnail=#{cartThumbnail},
		</if>
		<if test="spuId!=null">
			spu_id=#{spuId}
		</if>
		where id=#{id}
	</update>

	<update id="updateSkuSpec">
		update hg_sku_spec set sku_id=#{skuId},spec_id=#{specId},spec_option_id=#{specOptionId} where id=#{id}
	</update>

	<select id="selectSkuById" resultMap="skuMap">
		select s.*,ks.id ks_id,ks.spec_id,ks.spec_option_id from hg_sku s left join hg_sku_spec ks on s.id=ks.sku_id where s.id=#{id}
	</select>
	
	<select id="selectSkuList" resultType="sku">
		select id,image,title,price,status,stock_count stockCount from hg_sku where 1=1 
		    <if test="title!=null and title!=''">
		     and title like concat('%',#{title},'%') 
		    </if>
		    <if test="sellPoint!=null and sellPoint!=''">
		     and sell_point like concat('%',#{sellPoint},'%') 
		    </if>
	</select>
	
	<delete id="deleteSkuByIds">
		delete from hg_sku where id in
		<foreach collection="array" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	
	<delete id="deleteSkuSpecBySkuIds">
		delete from hg_sku_spec where sku_id in
		<foreach collection="array" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</delete>
	
	
	
	<select id="selectSkuIdsBySearch" resultType="int">
		select k.id
		FROM hg_sku k JOIN hg_spu p ON k.spu_id=p.id
		LEFT JOIN hg_category c1 ON p.category_id=c1.id 
		LEFT JOIN hg_category c2 ON c1.parent_id=c2.id 
		LEFT JOIN hg_category c3 ON c2.parent_id=c3.id 
		LEFT JOIN hg_brand b ON p.brand_id=b.id
		<if test="optionIds!=null">
		<foreach collection="optionIds" index="i">
			LEFT JOIN hg_sku_spec ks${i} ON k.id=ks${i}.sku_id
		</foreach>
		</if>
		<where>
			<if test="title!=null and title!=''">
				and (k.title like concat('%',#{title},'%') or p.goods_name like concat('%',#{title},'%') or c1.name like concat('%',#{title},'%') or c2.name like concat('%',#{title},'%') or c3.name like concat('%',#{title},'%') or b.name like concat('%',#{title},'%'))
			</if>
			<if
				test="startPrice!=null and startPrice!=0 and endPrice!=null and endPrice!=0 ">
				and k.price between #{startPrice} and #{endPrice}
			</if>
			<if test="brandId!=null">
				and b.id =#{brandId}
			</if>
			<if test="categoryId!=null">
				and c1.id =#{categoryId}
			</if>
			<if test="optionIds!=null">
			<foreach collection="optionIds" index="i" item="subList">
				and ks${i}.spec_option_id in 
				<foreach collection="subList" open="(" close=")" separator="," item="optionId">
					#{optionId}
				</foreach>
			</foreach>
			</if>
		</where>
		group by p.id
	</select>
	
	<select id="selectSkuByIds" resultType="sku">
		select k.* from hg_sku k where k.id in
		<foreach collection="list" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</select>
	
	<select id="selectCategoryBySkuIds" resultType="category">
		select distinct c.id,c.name
		from hg_category c join hg_spu p on c.id=p.category_id
		join hg_sku k on k.spu_id=p.id
		where k.id in
		<foreach collection="list" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</select>
	
	<select id="selectBrandBySkuIds" resultType="brand">
		select distinct b.id,b.name
		from hg_brand b join hg_spu p on b.id=p.brand_id
		join hg_sku k on k.spu_id=p.id
		where k.id in
		<foreach collection="list" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</select>
	
	<select id="selectNews" resultType="sku">
		SELECT k.* FROM hg_sku k JOIN (SELECT spu_id,MAX(create_time) max_create_time FROM hg_sku GROUP BY spu_id ORDER BY create_time DESC LIMIT #{num})t ON k.spu_id=t.spu_id AND k.create_time=t.max_create_time
	</select>
	
	<select id="selectSkuById1" resultMap="skuMap">
		select k.*,ks.id ks_id,ks.spec_id,ks.spec_option_id,s.spec_name,so.option_name
		from hg_sku k left join hg_sku_spec ks on k.id=ks.sku_id
		left join hg_spec s on ks.spec_id=s.id
		left join hg_spec_option so on ks.spec_option_id=so.id
		where k.id=#{id}
	</select>
	
	<select id="selectSkuBySpecOptionIds" resultType="sku">
		select k.*
		from hg_sku k 
			<foreach collection="array" index="i">
				left join hg_sku_spec ks${i} ON k.id=ks${i}.sku_id
			</foreach>
		<where>
			<foreach collection="array" index="i" item="id">
				and ks${i}.spec_option_id=#{id}
			</foreach>
		</where>
	</select>
	
	<select id="selectSkuIdsBySpuId" resultType="int">
		select id from hg_sku where spu_id=#{spu_id}
	</select>
	
	<select id="selectSkuSpecBySkuId" resultType="skuSpec">
		select ks.id,ks.spec_id,ks.spec_option_id,s.spec_name,so.option_name 
		from hg_sku_spec ks join hg_spec s on ks.spec_id=s.id
		join hg_spec_option so on ks.spec_option_id=so.id
		where ks.sku_id=#{sku_id}
	</select>
	
	
	<select id="selectSkuById2" resultType="sku">
		select id,title,image,price from hg_sku where id=#{id}
	</select>
	
	<update id="reduceStock">
		update hg_sku set stock_count=stock_count-#{num} where id=#{skuId}
	</update>
</mapper>