/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.20.v20190813
 * Generated at: 2019-11-22 01:08:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.spec;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class spec_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/program/mvn_rep/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("file:/D:/program/mvn_rep/jstl/jstl/1.2/jstl-1.2.jar", Long.valueOf(1567342320925L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"zh-CN\">\r\n");
      out.write("  <head>\r\n");
      out.write("  \t<base href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>hgshop后台管理系统</title>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Bootstrap core CSS -->\r\n");
      out.write("    <link href=\"/resource/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/resource/jquery/jquery-3.4.1.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/resource/bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("    \t//全局变量\r\n");
      out.write("\t\t  var index=0;\r\n");
      out.write("\t\t  //增加选项\r\n");
      out.write("\t\t  function addSpecOption(){\r\n");
      out.write("\t\t   \t//创建div的jquery对象\r\n");
      out.write("\t\t\t  var $div = '<div class=\"form-group addOption\" data-option-id='+0+'><label class=\"col-sm-3 control-label\">规格内容</label><div class=\"col-sm-6\"><input type=\"text\" class=\"form-control\" name=\"options['+index+'].optionName\" placeholder=\"请输入规格内容\"></div><div class=\"col-sm-3\"><input type=\"button\" class=\"btn-danger deleteOption\" value=\"删除\" onclick=\"deleteOption(this)\"/></div></div>';\r\n");
      out.write("\t\t\t  //传递参数判断的操作\r\n");
      out.write("\t\t\t  //加入到指定的from表单中\r\n");
      out.write("\t\t\t  $(\"#addForm\").append($div);\r\n");
      out.write("\t\t\t  //下标++\r\n");
      out.write("   \t\t\tindex++;\r\n");
      out.write("     \t}\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\tfunction deleteOption(obj){\r\n");
      out.write(" \t \t  //$(obj)代表的把Dom对象转换成jquery对象: 通过找到加入的div的jquery对象,通过jquery中的parent()方法，再通过jquery对象中的remove()把自己删除\r\n");
      out.write("\t\t  var $div = $(obj).parent().parent();\r\n");
      out.write("\t      //自定属性的获取方式\r\n");
      out.write("\t      var optionId = $div.data().optionId;\r\n");
      out.write("\t      \n");
      out.write("\t      if(optionId==0){\r\n");
      out.write("\t    \t  $div.remove();\r\n");
      out.write("\t      }else{\r\n");
      out.write("\t          $.post('/Spec/specOptionDelete',{id:optionId},function(data){\r\n");
      out.write("\t        \tif(data){\r\n");
      out.write("\t              alert(\"选项删除成功\");\r\n");
      out.write("\t              $div.remove();\r\n");
      out.write("\t            }else{\r\n");
      out.write("\t              alert(\"选项删除失败\");\r\n");
      out.write("\t            }\r\n");
      out.write("\t     \t  },\"json\")\r\n");
      out.write("       \t  }\r\n");
      out.write(" \t \t }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction addSpec(){\r\n");
      out.write("\t\t\t$.post('/Spec/specAdd',$('#addForm').serialize(),function(data){\r\n");
      out.write("\t        \tif(data){\r\n");
      out.write("\t              alert(\"规格添加成功\");\r\n");
      out.write("\t              index = 0;\r\n");
      out.write("\t              $('#myModal').modal('hide');\r\n");
      out.write("\t              $('#addForm .addOption').remove();\r\n");
      out.write("\t              window.location.reload();\r\n");
      out.write("\t            }else{\r\n");
      out.write("\t              alert(\"规格添加失败\");\r\n");
      out.write("\t            }\r\n");
      out.write("\t     \t  },\"json\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction preAddSpec(){\r\n");
      out.write("\t\t\t$('#addId').val('');\r\n");
      out.write("\t\t\t$('#addSpecName').val('');\r\n");
      out.write("\t\t\t$('#addForm .addOption').remove();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#addSpec').show();\r\n");
      out.write("    \t\t$('#addOption').show();\r\n");
      out.write("    \t\t$('.deleteOption').show();\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t$('#addForm input').prop('readonly', false);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tindex = 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction getSpecById(id,flag){\r\n");
      out.write("\t\t\t$.post('/Spec/getSpecById',{id:id},function(data){\r\n");
      out.write("\t        \t//1.填充spec数据\r\n");
      out.write("\t\t\t\t$('#addId').val(data.id);\r\n");
      out.write("\t        \t$('#addSpecName').val(data.specName);\r\n");
      out.write("\t        \t//2.拼接spec_option选项\r\n");
      out.write("\t\t\t\tvar str = ''; \r\n");
      out.write("\t        \tfor(var i in data.options){\r\n");
      out.write("\t        \t\tstr += '<div class=\"form-group addOption\" data-option-id='+data.options[i].id+'><label class=\"col-sm-3 control-label\">规格内容</label><div class=\"col-sm-6\"><input type=\"hidden\"  name=\"options['+index+'].id\" value=\"' + data.options[i].id + '\"/><input type=\"text\" class=\"form-control\" name=\"options['+index+'].optionName\" placeholder=\"请输入规格内容\" value=\"' + data.options[i].optionName + '\"></div><div class=\"col-sm-3\"><input type=\"button\" class=\"btn-danger deleteOption\" value=\"删除\" onclick=\"deleteOption(this)\"/></div></div>';\r\n");
      out.write("\t\t\t\t\tindex++;\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        \t$(\"#addForm\").append(str);\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \tif(flag==2){\r\n");
      out.write("\t        \t\t$('#addSpec').hide();\r\n");
      out.write("\t        \t\t$('#addOption').hide();\r\n");
      out.write("\t        \t\t$('.deleteOption').hide();\r\n");
      out.write("\t        \t\t$('#addForm input').prop('readonly', true);\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t        \t\r\n");
      out.write("\t\t\t},\"json\")\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("    \t\t$('#cbk').on('click',function(){\r\n");
      out.write("    \t\t\t$('.ck').prop('checked', this.checked);\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t})\r\n");
      out.write("    \tfunction deleteSpec(ids){\r\n");
      out.write("    \t\tif(ids==undefined){\r\n");
      out.write("    \t\t\t//批量删除 [user1,user2,user3]  ----> [1,2,3]\r\n");
      out.write("    \t\t\tids = $('.ck:checked').map(function(){\r\n");
      out.write("    \t\t\t\treturn this.value;\r\n");
      out.write("    \t\t\t}).get().join(',');\r\n");
      out.write("    \t\t\talert(ids);\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t\tif(ids!=''){\r\n");
      out.write("    \t\t\tif(confirm('确定要删除选中的数据吗?')){\r\n");
      out.write("    \t\t\t\t$.post('/Spec/specDelete',{ids:ids},function(data){\r\n");
      out.write("    \t    \t\t\tif(data){\r\n");
      out.write("    \t    \t\t\t\twindow.location.reload();\r\n");
      out.write("    \t    \t\t\t}else{\r\n");
      out.write("    \t    \t\t\t\talert('删除规格失败');\r\n");
      out.write("    \t    \t\t\t}\r\n");
      out.write("    \t    \t\t},'json');\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t}else{\r\n");
      out.write("    \t\t\talert('请选中要删除的数据');\r\n");
      out.write("    \t\t}\r\n");
      out.write("    \t}\r\n");
      out.write("    </script>\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body>\r\n");
      out.write("  \t<div class=\"container-fluid\">\r\n");
      out.write("  \t\t<div class=\"row\">\r\n");
      out.write("  \t\t\t<form action=\"/Spec/specList\" method=\"post\">\r\n");
      out.write("  \t\t\t\t<input type=\"hidden\"  name=\"pageNum\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pageNum }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t    <label for=\"specName\">规格名称</label>\r\n");
      out.write("\t\t\t\t    <input type=\"text\" class=\"form-control\" id=\"specName\" name=\"specName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.specName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"规格名称\">\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  <button class=\"btn btn-success\" type=\"submit\">搜索</button>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t\t<div class=\"row\" style=\"float: right;\">\r\n");
      out.write("\t\t\t\t  <button class=\"btn btn-danger\" onclick=\"deleteSpec()\">批量删除</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-md\" data-toggle=\"modal\" data-target=\"#myModal\" onclick=\"preAddSpec()\">\r\n");
      out.write("\t\t\t\t  \t新增规格\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t\r\n");
      out.write("  \t\t<div class=\"row\">\r\n");
      out.write("  \t\t\t<table class=\"table table-striped\">\r\n");
      out.write("\t\t      <thead>\r\n");
      out.write("\t\t        <tr>\r\n");
      out.write("\t\t        \t<th><input type=\"checkbox\" id=\"cbk\">全选</th>\r\n");
      out.write("\t\t          <th>编号</th>\r\n");
      out.write("\t\t          <th>规格名称</th>\r\n");
      out.write("\t\t          <th>规格选项</th>\r\n");
      out.write("\t\t          <th>操作</th>\r\n");
      out.write("\t\t        </tr>\r\n");
      out.write("\t\t      </thead>\r\n");
      out.write("\t\t      <tbody>\r\n");
      out.write("\t\t      \t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t      </tbody>\r\n");
      out.write("\t\t    </table>\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    <nav>\r\n");
      out.write("\t\t\t\t  <ul class=\"pagination\">\r\n");
      out.write("\t\t\t\t  \t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t    ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t    ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t  </ul>\r\n");
      out.write("\t\t\t\t</nav>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \t<!-- Modal -->\r\n");
      out.write("\t\t<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("\t\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t    <div class=\"modal-content\">\r\n");
      out.write("\t\t      <div class=\"modal-header\">\r\n");
      out.write("\t\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onclick=\"preAddSpec()\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("\t\t        <h4 class=\"modal-title\" id=\"myModalLabel\">新增规格参数</h4>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      <div class=\"modal-body\">\r\n");
      out.write("\t\t        <form class=\"form-horizontal\" id=\"addForm\">\r\n");
      out.write("\t\t        \t<input type=\"hidden\" id=\"addId\" name=\"id\"/>\r\n");
      out.write("\t\t\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t    <label for=\"addSpecName\" class=\"col-sm-3 control-label\">规格名称</label>\r\n");
      out.write("\t\t\t\t\t\t    <div class=\"col-sm-9\">\r\n");
      out.write("\t\t\t\t\t\t      <input type=\"text\" class=\"form-control\" id=\"addSpecName\" name=\"specName\" placeholder=\"规格名称\">\r\n");
      out.write("\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t    <div class=\"col-sm-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"btn btn-info\" value=\"增加选项内容\" id=\"addOption\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tonclick=\"addSpecOption()\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      <div class=\"modal-footer\">\r\n");
      out.write("\t\t        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onclick=\"preAddSpec()\">关闭</button>\r\n");
      out.write("\t\t        <button type=\"button\" class=\"btn btn-primary\" onclick=\"addSpec()\" id=\"addSpec\">添加</button>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("  </body>\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/view/spec/spec_list.jsp(163,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/spec/spec_list.jsp(163,9) '${pageInfo.list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageInfo.list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/view/spec/spec_list.jsp(163,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("spec");
      // /WEB-INF/view/spec/spec_list.jsp(163,9) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("index");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t        <tr>\r\n");
            out.write("\t\t        \t<td><input type=\"checkbox\" class=\"ck\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"/></td>\r\n");
            out.write("\t\t          <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index.count }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t          <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.specName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t          <td>\r\n");
            out.write("\t\t          \t\t");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.optionNames}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("\t\t          </td>\r\n");
            out.write("\t\t          <td>\r\n");
            out.write("\t\t          \t<button class=\"btn btn-danger\" onclick=\"deleteSpec(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\">删除</button>\r\n");
            out.write("\t\t          \t<button type=\"button\" class=\"btn btn-primary btn-md\" data-toggle=\"modal\" data-target=\"#myModal\" onclick=\"getSpecById(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(",1)\">\r\n");
            out.write("\t\t\t\t\t\t\t\t  修改\r\n");
            out.write("\t\t\t\t\t\t\t\t</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-md\" data-toggle=\"modal\" data-target=\"#myModal\" onclick=\"getSpecById(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(",2)\">\r\n");
            out.write("\t\t\t\t\t\t\t\t  查看\r\n");
            out.write("\t\t\t\t\t\t\t\t</button>\r\n");
            out.write("\t\t          </td>\r\n");
            out.write("\t\t        </tr>\r\n");
            out.write("\t\t        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/view/spec/spec_list.jsp(187,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.hasPreviousPage}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t    <li>\r\n");
          out.write("\t\t\t\t      <a href=\"/Spec/specList?pageNum=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pageNum - 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&specName=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.specName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("\t\t\t\t        <span aria-hidden=\"true\">上一页</span>\r\n");
          out.write("\t\t\t\t      </a>\r\n");
          out.write("\t\t\t\t    </li>\r\n");
          out.write("\t\t\t\t    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/view/spec/spec_list.jsp(194,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/spec/spec_list.jsp(194,8) '${pageInfo.navigatepageNums}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageInfo.navigatepageNums}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/view/spec/spec_list.jsp(194,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("pageNum");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t    \t");
            if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("\t\t\t\t    \t");
            if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\r\n");
            out.write("\t\t\t\t    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/view/spec/spec_list.jsp(195,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pageNum==pageNum}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t    \t<li class=\"active\"><a href=\"/Spec/specList?pageNum=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&specName=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.specName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a></li>\r\n");
          out.write("\t\t\t\t    \t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /WEB-INF/view/spec/spec_list.jsp(198,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pageNum!=pageNum}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t    \t<li><a href=\"/Spec/specList?pageNum=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&specName=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.specName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a></li>\r\n");
          out.write("\t\t\t\t    \t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/view/spec/spec_list.jsp(202,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.hasNextPage}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t    <li>\r\n");
          out.write("\t\t\t\t      <a href=\"/Spec/specList?pageNum=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo.pageNum + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&specName=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${spec.specName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" aria-label=\"Next\">\r\n");
          out.write("\t\t\t\t        <span aria-hidden=\"true\">下一页</span>\r\n");
          out.write("\t\t\t\t      </a>\r\n");
          out.write("\t\t\t\t    </li>\r\n");
          out.write("\t\t\t\t    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
